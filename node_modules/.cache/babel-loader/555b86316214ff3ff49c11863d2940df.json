{"ast":null,"code":"var _jsxFileName = \"/Users/bimals/Desktop/module-4-recap/m4-d7hooks/src/components/AddComment.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddComment = ({\n  asin\n}) => {\n  _s();\n\n  // state={\n  //     comments:{\n  //         comment:\"\",\n  //         rate: 1,\n  //         elementId: null\n  //     }\n  // }\n  const [comments, setComments] = useState({\n    comment: '',\n    rate: 1,\n    elementId: null\n  });\n  useEffect(() => {\n    setComments({ ...comments,\n      elementId: asin\n    });\n  }, [asin]);\n\n  const handleInput = async e => {\n    try {\n      e.preventDefault();\n      const response = await fetch(\" https://striveschool-api.herokuapp.com/api/comments\", {\n        method: \"POST\",\n        body: JSON.stringify(comments),\n        headers: {\n          \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGRjNzMzNGIzNTgxNzAwMTVjMjI3NWIiLCJpYXQiOjE2Mjk5NzkzNzUsImV4cCI6MTYzMTE4ODk3NX0.8oPWQmDkjhZppxF1O_JjqR5vYAfRMCIn_4zUs7p9_OM\",\n          \"Content-type\": 'application/json'\n        }\n      });\n\n      if (response.ok) {\n        alert('Comments added successfully');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleInput,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"add comment\",\n        value: comments.comment,\n        onChange: e => setComments({\n          comments,\n          comment: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Rate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        value: comments.rate,\n        onChange: e => setComments({ ...comments,\n          rate: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"success\",\n      type: \"submit\",\n      children: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 12\n  }, this);\n};\n\n_s(AddComment, \"AL06n0TiQzSGhIup/v6QKYjFAj4=\");\n\n_c = AddComment;\nexport default AddComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddComment\");","map":{"version":3,"sources":["/Users/bimals/Desktop/module-4-recap/m4-d7hooks/src/components/AddComment.jsx"],"names":["useEffect","useState","Form","Button","AddComment","asin","comments","setComments","comment","rate","elementId","handleInput","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","ok","alert","error","console","log","target","value"],"mappings":";;;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAAOC,IAAP,EAAYC,MAAZ,QAAyB,iBAAzB;;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAAA;;AAC3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAM,CAACC,QAAD,EAAYC,WAAZ,IAA2BN,QAAQ,CAAC;AACtCO,IAAAA,OAAO,EAAE,EAD6B;AAEtCC,IAAAA,IAAI,EAAE,CAFgC;AAGtCC,IAAAA,SAAS,EAAC;AAH4B,GAAD,CAAzC;AAMAV,EAAAA,SAAS,CAAC,MAAI;AACVO,IAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERI,MAAAA,SAAS,EAACL;AAFF,KAAD,CAAX;AAIH,GALQ,EAKP,CAACA,IAAD,CALO,CAAT;;AAOA,QAAMM,WAAW,GAAG,MAAOC,CAAP,IAAY;AAC5B,QAAI;AACAA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAD,EAAwD;AAChFC,QAAAA,MAAM,EAAC,MADyE;AAEhFC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeb,QAAf,CAF0E;AAGhFc,QAAAA,OAAO,EAAC;AACJ,2BAAiB,qLADb;AAEJ,0BAAgB;AAFZ;AAHwE,OAAxD,CAA5B;;AAQA,UAAGN,QAAQ,CAACO,EAAZ,EAAe;AACXC,QAAAA,KAAK,CAAC,6BAAD,CAAL;AAEH;AACJ,KAdD,CAcE,OAAOC,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEH;AAEJ,GApBD;;AAwBI,sBACG,QAAC,IAAD;AAAM,IAAA,QAAQ,EAAEZ,WAAhB;AAAA,4BACI,QAAC,IAAD,CAAM,KAAN;AAAA,6BAEK,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,WAAW,EAAC,aAAtC;AACA,QAAA,KAAK,EAAEL,QAAQ,CAACE,OADhB;AAEA,QAAA,QAAQ,EAAEI,CAAC,IAAGL,WAAW,CAAC;AACtBD,UAAAA,QADsB;AAEtBE,UAAAA,OAAO,EAACI,CAAC,CAACc,MAAF,CAASC;AAFK,SAAD;AAFzB;AAAA;AAAA;AAAA;AAAA;AAFL;AAAA;AAAA;AAAA;AAAA,YADJ,eAYK,QAAC,IAAD,CAAM,KAAN;AAAA,8BACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,EAAE,EAAC,QAAjB;AAA0B,QAAA,KAAK,EAAErB,QAAQ,CAACG,IAA1C;AACA,QAAA,QAAQ,EAAEG,CAAC,IAAGL,WAAW,CAAC,EACtB,GAAGD,QADmB;AAEtBG,UAAAA,IAAI,EAACG,CAAC,CAACc,MAAF,CAASC;AAFQ,SAAD,CADzB;AAAA,gCAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATA,eAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZL,eA2BI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,IAAI,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAiCH,CA/EL;;GAAMvB,U;;KAAAA,U;AAiFN,eAAeA,UAAf","sourcesContent":["\nimport { useEffect } from \"react\"\nimport { useState } from \"react\"\nimport{Form,Button} from \"react-bootstrap\"\n\nconst AddComment = ({asin}) => {\n    // state={\n    //     comments:{\n    //         comment:\"\",\n    //         rate: 1,\n    //         elementId: null\n    //     }\n      \n    // }\n    const [comments , setComments] = useState({\n        comment: '',\n        rate: 1,\n        elementId:null\n    })\n\n    useEffect(()=>{\n        setComments({\n            ...comments,\n            elementId:asin\n        })\n    },[asin])\n\n    const handleInput = async (e) =>{\n        try {\n            e.preventDefault();\n            const response = await fetch(\" https://striveschool-api.herokuapp.com/api/comments\",{\n                method:\"POST\",\n                body: JSON.stringify(comments),\n                headers:{\n                    \"Authorization\": \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MGRjNzMzNGIzNTgxNzAwMTVjMjI3NWIiLCJpYXQiOjE2Mjk5NzkzNzUsImV4cCI6MTYzMTE4ODk3NX0.8oPWQmDkjhZppxF1O_JjqR5vYAfRMCIn_4zUs7p9_OM\",\n                    \"Content-type\": 'application/json'\n                }\n            })\n            if(response.ok){\n                alert('Comments added successfully')\n                \n            }\n        } catch (error) {\n            console.log(error)\n            \n        }\n\n    }\n\n    \n\n        return(\n           <Form onSubmit={handleInput}>\n               <Form.Group >\n                    \n                    <Form.Control type=\"text\" placeholder=\"add comment\" \n                    value={comments.comment}\n                    onChange={e =>setComments({\n                        comments,\n                        comment:e.target.value\n                    \n                })}\n                     />\n                </Form.Group>\n                <Form.Group >\n                    <Form.Label>Rate</Form.Label>\n                    <Form.Control as=\"select\" value={comments.rate}\n                    onChange={e =>setComments({\n                        ...comments,\n                        rate:e.target.value\n                    })\n                }>\n                    <option>1</option>\n                    <option>2</option>\n                    <option>3</option>\n                    <option>4</option>\n                    <option>5</option>\n                    </Form.Control>\n               </Form.Group>\n               <Button variant=\"success\" type=\"submit\">\n                                Add\n             </Button>\n           </Form>\n        )\n    }\n\nexport default AddComment"]},"metadata":{},"sourceType":"module"}